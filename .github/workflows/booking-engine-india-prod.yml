name: Release Booking Engine India Prod

on: [workflow_dispatch]

env:
  ECR_REPOSITORY: 912195358089.dkr.ecr.ap-south-1.amazonaws.com/booking_engine
  service_name: booking_engine
  depl_cluster_name: webui

  AWS_ROLE: arn:aws:iam::912195358089:role/webui-india_prod-deployment-role
  AWS_REGION: ap-south-1
  deployment_variables: webui_india_prod_deployment_api_credentials

  BRANCH: release-india-prod
  depl_username: aa
  depl_password: aa
  depl_url: aa

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Container Image
        id: build-conatainer-image
        run: |
          docker build -t $ECR_REPOSITORY:latest .

      - name: Push Container Image to ECR
        id: upload-conatainer-image
        run: |
          docker push $ECR_REPOSITORY:latest

  deploy:
    needs: build
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch deployment credentials from aws secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: ${{ env.deployment_variables }}
          parse-json-secrets: true
          name-transformation: none

      - name: Set environment variables
        run: |
          username_var="${deployment_variables}_username"
          password_var="${deployment_variables}_password"
          url_var="${deployment_variables}_url"

          echo "depl_username=${!username_var}" >> $GITHUB_ENV
          echo "depl_password=${!password_var}" >> $GITHUB_ENV
          echo "depl_url=${!url_var}" >> $GITHUB_ENV

      - name: deploy
        id: deploy
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST -H "Content-Type: application/x-www-form-urlencoded" -u "$depl_username:$depl_password" -d "service_to_update=$service_name" "$depl_url/job/$depl_cluster_name/buildWithParameters")
          if [ "$response" -eq 201 ]; then
            echo "Success! The response code is $response."
          else
            echo "Failed! The response code is $response."
            exit 1
          fi
